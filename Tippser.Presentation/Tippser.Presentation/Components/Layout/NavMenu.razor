@using Tippser.Presentation.Client.Resources
@using Microsoft.AspNetCore.Components.Authorization
@using Tippser.Presentation.Client.Services

@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager nav

@implements IDisposable
@inject SharedStateService state;

@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        <a class="@(GetClass("standings"))" @onclick="@((e) => SetState("standings"))">
            @PresentationResources.STANDINGS
        </a>

        <a class="@(GetClass("bets"))" @onclick="@((e) => SetState("bets"))">
            @PresentationResources.BETS
        </a>

        <a class="@(GetClass("account"))" @onclick="@((e) => SetState("account"))">
            @PresentationResources.ACCOUNT
        </a>
    </Authorized>

    <NotAuthorized>
        <a class="@(GetClass("account/signin"))" @onclick="@((e) => SetState("account/signin"))">
            @PresentationResources.SIGNIN
        </a>

        <a class="@(GetClass("account/create"))" @onclick="@((e) => SetState("account/create"))">
            @PresentationResources.CREATEACCOUNT
        </a>

        <a class="@(GetClass("account/forgotpassword"))" @onclick="@((e) => SetState("account/forgotpassword"))">
            @PresentationResources.FORGOTPASSWORD
        </a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? currentUrl;

    public void SetState(string url)
    {
        state.Set(currentUrl!);
        nav.NavigateTo(url);
    }

    public string GetClass(string elm)
    {
        if (currentUrl!.ToLower().Contains(elm.ToLower()))
        {
            return "btn btn-active";
        }

        return "btn";
    }

    protected override void OnInitialized()
    {
        currentUrl = nav.ToBaseRelativePath(nav.Uri);
        nav.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = nav.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        nav.LocationChanged -= OnLocationChanged;
    }
}

